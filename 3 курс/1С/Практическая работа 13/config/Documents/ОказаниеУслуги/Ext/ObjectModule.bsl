Процедура ОбработкаПроведения(Отказ, Режим)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	// регистр ОстаткиМатериалов Расход
	Движения.ОстаткиМатериалов.Записывать = Истина;
	Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
		Движение = Движения.ОстаткиМатериалов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Материал = ТекСтрокаМатериалы.Материал;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаМатериалы.Количество;
	КонецЦикла;
	
	Движения.Записать();
	// регистр Взаимозачеты Приход
	Движения.Взаимозачеты.Записывать = Истина;
	Движение = Движения.Взаимозачеты.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	Движение.Период = Дата;
	Движение.Контрагент = Клиент;
	Движение.Сумма = ВсегоПоДокументу;
	
	Если Режим = РежимПроведенияДокумента.Оперативный Тогда
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		| ОстаткиМатериаловОстатки.Материал,
		| ОстаткиМатериаловОстатки.Склад,
		| ОстаткиМатериаловОстатки.КоличествоОстаток
		|ИЗ
		| РегистрНакопления.ОстаткиМатериалов.Остатки (
		|,
		|Склад =&Склад
		| И Материал В
		| (ВЫБРАТЬ МатериалыМатериал.Материал из
		| Документ.ОказаниеУслуги.Материалы как МатериалыМатериал
		| ГДЕ МатериалыМатериал.Ссылка = &Ссылка))
		|КАК ОстаткиМатериаловОстатки ГДЕ
		| ОстаткиМатериаловОстатки.КоличествоОстаток < 0 ";

	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	РезультатЗапроса = Запрос.Выполнить();
	ЕСЛИ НЕ РезультатЗапроса.Пустой() ТОГДА
	ОТКАЗ = ИСТИНА;

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	Сообщить ("Недостаточно товара"+ВыборкаДетальныеЗаписи.Материал +
	" в количестве "+ВыборкаДетальныеЗаписи.Количество);
	КонецЦикла;
	КонецЕсли;
	КонецЕсли;

//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
Движения.СебестоимостьТоваров.Записывать=Истина;	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СебестоимостьТоваровОстатки.Номенклатура,
		|	СебестоимостьТоваровОстатки.КоличествоОстаток как Количество,
		|	СебестоимостьТоваровОстатки.СуммаОстаток как Сумма
		|ИЗ
		|	РегистрНакопления.СебестоимостьТоваров.Остатки (
		| &МоментВремени,
		| Номенклатура В
		| ( ВЫБРАТЬ ОказаниеУслугиМатериалы.Материал
		| ИЗ Документ.ОказаниеУслуги.Материалы как ОказаниеУслугиМатериалы
		|  ГДЕ ОказаниеУслугиМатериалы.Ссылка =&Ссылка ))
		| КАК СебестоимостьТоваровОстатки";
		
	Запрос.УстановитьПараметр("МоментВремени",МоментВремени());
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
// присвоить начальное значение расчётной сумме
	СуммаСебестоимости = 0;
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	СебестоимостьЕдиницы = ВыборкаДетальныеЗаписи.Сумма/ ВыборкаДетальныеЗаписи.Количество;
	Движение = Движения.СебестоимостьТоваров.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период=Дата;
	Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
	ТекСтр = Материалы.Найти(ВыборкаДетальныеЗаписи.Номенклатура, "Материал");
	Движение.Сумма = СебестоимостьЕдиницы * ТекСтр.Количество;
			
	СуммаСебестоимости = СуммаСебестоимости + СебестоимостьЕдиницы * ТекСтр.Количество;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Движения.РегистрБухУчет.Записывать=Истина;
	Проводка=Движения.РегистрБухУчет.Добавить();
	Проводка.Период=Дата;
	Проводка.СчетДт=ПланыСчетов.БухгалтерскийУчет.Покупатели;
	Проводка.СчетКт=ПланыСчетов.БухгалтерскийУчет.Выручка;
	Проводка.Сумма=ВсегоПоДокументу;
	
	Движения.РегистрБухУчет.Записывать=Истина;
	Проводка=Движения.РегистрБухУчет.Добавить();
	Проводка.Период=Дата;
	Проводка.СчетДт=ПланыСчетов.БухгалтерскийУчет.Себестоимость;
	Проводка.СчетКт=ПланыСчетов.БухгалтерскийУчет.Товары;
	Проводка.Сумма=СуммаСебестоимости;

		
КонецПроцедуры

Процедура ПередЗаписью(Отказ,Запись,Проведение)
	ВсегоПоДокументу = ПереченьУслуг.Итог("Сумма") + Материалы.Итог("Сумма");
КонецПроцедуры;
